● 서로소 집합(Disjoint Sets)
: 공통 원소가 없는 두 집합
ex) union-find = O(V)
{1,2}와 {3,4}는 서로소 관계
{1,2}와 {2,3}은 서로소 관계가 아니다.
서로소 부분 집합들로 나누어진 원소들의 데이터를 처리하기 위한 자료구조

● 서로소 집합은 무방향 그래프 내에서의 cycle을 판별할 떄 사용할 수 있다.
(방향 그래프에서의 cycle여부는 DFS를 이용해 판별 가능)
● 사이클 판별 알고리즘은 다음과 같다
1. 각 간선을 하나씩 확인하며 두 노드의 루트 노드를 확인한다.
  a) 루트 노드가 서로 다르면 두 노드에 대하여 Union()
  b) 루트 노드가 서로 같다면 Cycle 
2. 그래프에 포함되어 있는 모든 간선에 대하여 1번 과정을 반복한다.


● 신장트리
: 하나의 그래프가 있을 때 모든 노드를 포함하면서 
사이클이 존재하지 않는 부분 그래프 이다.
ex) 크루스칼 Alg = O(ElogE)
간선 정렬할 때 시간이 가장 오래걸린다. E개의 데이터 정렬이니 ElogE


● 위상 정렬
: 방향 그래프의 모든 노드를 '방향성에 거스르지 않도록 순서대로 나열하는 것'
ex) 선수과목 = O(V+E)
1. 진입차수가 0 인 노드를 큐에 넣는다.
2. 큐가 빌때까지 다음 과정을 반복한다.
 a) 큐에서 원소를 꺼내 해당 노드에서 출발하는 간선을 그래프에서 제거한다.
 b) 새롭게 진입차수가 0이 된 노드를 큐에 넣는다.
차례대로 모든 노드를 확인하면서, 해당 노드에서 출발하는 간선을 제거 해야함
-> 노드와 간선을 모두 확인해야함 O(V+E)

